name: deploy
on:
  push:
    branches:
      - development
jobs:
  deploy:
    name: Deploy all settings and mods and restart server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v3

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: copy minecraft.sh
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/minecraft.dev.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/minecraft.sh

      - name: Stop server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          request_pty: true
          script: |
            cd /community-development/
            chown -R root:docker .
            chmod +x ./minecraft.sh
            ./minecraft.sh stop

      - name: deploy configs
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/config ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ --delete

      - name: deploy voice chat config
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/config/voicechat/voicechat-server.dev.properties ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/config/voicechat/voicechat-server.properties

      - name: copy banned ips
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/banned-ips.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/banned-ips.json

      - name: copy banned players
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/banned-players.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/banned-players.json

      - name: copy default configs
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/defaultconfigs ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ --delete

      - name: copy Discord-Integration.dev.toml
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/config/Discord-Integration.dev.toml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/config/Discord-Integration.toml

      - name: copy bluemap webserver.conf
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/config/bluemap/webserver.dev.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/config/bluemap/webserver.conf

      - name: copy create-track-map.json
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/config/create-track-map.dev.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/config/create-track-map.json

      - name: copy local
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/local ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ --delete

      - name: copy kubejs
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/kubejs ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ --delete

      - name: copy mods
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/mods ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ --delete

      - name: copy run.sh
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/run.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/run.sh

      - name: copy ops.json
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/ops.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/ops.json

      - name: copy server.properties
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/server.dev.properties ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/server.properties

      - name: copy user_jvm_args.txt
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/user_jvm_args.dev.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/user_jvm_args.txt

      - name: copy whitelist.json
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/whitelist.dev.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/whitelist.json

      - name: copy world settings
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/uberswesCommunityEdition/serverconfig ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/uberswesCommunityEdition/ --delete

      - name: copy datapacks
        run: rsync -avzI -e "ssh -p ${{ secrets.SSH_PORT }}" ./server/uberswesCommunityEdition/datapacks ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/community-development/uberswesCommunityEdition/ --delete


      - name: Copy Latest Backup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            rm -rf /community-development/uberswesCommunityEdition
            cd /community/backups/
            unzip -o "$(ls -t | head -n 2 | tail -n 1)" -d /community-development/
            cp -r /community/libraries /community-development/libraries
            cp -r /community/eula.txt /community-development/eula.txt
            cd /community-development/
            chown -R root:root .
            chmod +x ./minecraft.sh

      - name: Start Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          allenvs: true
          script: |
            cd /community-development/
            chown -R root:docker .
            chmod +x ./minecraft.sh
            ./minecraft.sh start